--- original/usr/share/lipstick-jolla-home-qt5/lockscreen/LockItem.qml
+++ patch/usr/share/lipstick-jolla-home-qt5/lockscreen/LockItem.qml
@@ -15,6 +15,7 @@
 import org.nemomobile.lipstick 0.1
 import "../main"
 import "../statusarea"
+import "file:///home/nemo/widgetManager"
 
 SilicaFlickable {
     id: lockItem
@@ -118,119 +119,20 @@
         width: lockItem.width
         height: lockItem.height - y
 
-        Clock {
+        Item
+        {
             id: clock
-
-            property bool cannotCenter: Screen.sizeCategory <= Screen.Medium && lockScreenPage.isPortrait
-
-            property real peekOffset: clock.followPeekPosition
-                        ? lockScreen.progress * (lockItem.contentTopMargin - lockItem.statusBarHeight)
-                        : 0
-            property real animationOffset
-            readonly property real offset: Math.max(peekOffset, animationOffset)
+            opacity: 1.0
             property real transitionOpacity: 1.0
-            property real unlockOpacity: lockScreen.locked ? 1 - lockScreen.progress : 0.0
-
-            property string positionState: {
-                if (lockScreen.lowPowerMode) {
-                    return "fixed-center"
-                } else if (Lipstick.compositor.lockScreenLayer.closing) {
-                    return "raised"
-                } else if (!lockScreen.locked && !visible && !Lipstick.compositor.cameraLayer.exposed) {
-                    return "fixed-raised"
-                } else if (!lockItem.allowAnimations) {
-                    return lockScreen.lockScreenAnimated ? "raised" : "fixed-center"
-                } else if (lockScreen.panning) {
-                    return "panning"
-                } else if ((!lockScreen.locked && !Lipstick.compositor.cameraLayer.exposed)
-                            || Lipstick.compositor.notificationOverviewLayer.revealingEventsView) {
-                    return "raised"
-                } else {
-                    return "center"
-                }
-            }
-
-            onPositionStateChanged: {
-                if (positionState == "fixed-raised") {
-                    offsetAnimation.stop()
-                    animationOffset = lockScreen.peekFilter.threshold * 0.5
-                    opacityAnimation.stop()
-                    transitionOpacity = 0
-                } else if (positionState == "fixed-center") {
-                    offsetAnimation.stop()
-                    animationOffset = 0
-                    opacityAnimation.stop()
-                    transitionOpacity = 1
-                } else if (positionState == "raised") {
-                    offsetAnimation.from = offset
-                    offsetAnimation.to = lockScreen.peekFilter.threshold * 0.5
-                    offsetAnimation.duration = 400
-                    offsetAnimation.restart()
-                    opacityAnimation.duration = 400
-                    opacityAnimation.to = 0
-                    opacityAnimation.restart()
-                } else {
-                    offsetAnimation.from = offset
-                    offsetAnimation.to = 0
-                    offsetAnimation.duration = 500
-                    offsetAnimation.restart()
-                    opacityAnimation.duration = 500
-                    opacityAnimation.to = 1
-                    opacityAnimation.restart()
-                }
-            }
-
-            FadeAnimation {
-                id: opacityAnimation
-                target: clock
-                property: "transitionOpacity"
-            }
-
-            NumberAnimation on animationOffset {
-                id: offsetAnimation
-                running: false
-                easing.type: Easing.InOutQuad
-            }
-
-            anchors {
-                horizontalCenter: parent.horizontalCenter
-                topMargin: cannotCenter ? Theme.paddingLarge - offset : 0
-                verticalCenterOffset: !cannotCenter ? -offset : 0
-            }
-
-            color: lockScreen.textColor
-            updatesEnabled: visible
-            opacity: Math.min(transitionOpacity, unlockOpacity)
-            Behavior on unlockOpacity {
-                enabled: lockScreen.locked
-                SmoothedAnimation { duration: 100; velocity: 1000 / duration }
-            }
-
-            states: [
-                State {
-                    when: clock.cannotCenter
-                    AnchorChanges {
-                        target: clock
-                        anchors { top: contentItem.top; verticalCenter: undefined }
-                    }
-                }, State {
-                    when: !clock.cannotCenter
-                    AnchorChanges {
-                        target: clock
-                        anchors { top: undefined; verticalCenter: contentItem.verticalCenter }
-                    }
-                }
-            ]
         }
+        PortraitWidgets {
+            anchors.fill:parent 
+            visible: lockScreenPage.isPortrait 
+        }
 
-        WeatherIndicatorLoader {
-            anchors {
-                top: clock.bottom
-                horizontalCenter: clock.horizontalCenter
-            }
-            opacity: clock.opacity
-            temperatureFontPixelSize: clock.weekdayFont.pixelSize
-            active: Lipstick.compositor.lockScreenLayer.active
+        LandscapeWidgets {
+            anchors.fill:parent 
+            visible: !lockScreenPage.isPortrait 
         }
 
         MprisPlayerControls {
@@ -295,7 +197,7 @@
             }
             width: parent.width
             spacing: Theme.paddingSmall
-            visible: clock.visible
+            //visible: clock.visible
             opacity: clock.transitionOpacity
 
             OngoingCall {
--- original/usr/share/lipstick-jolla-home-qt5/lockscreen/LockScreen.qml
+++ patch/usr/share/lipstick-jolla-home-qt5/lockscreen/LockScreen.qml
@@ -25,11 +25,17 @@
 
     cover: undefined
     _clippingItem.opacity: 1.0
-    allowedOrientations: Lipstick.compositor.homeOrientation
-
+    //allowedOrientations: Lipstick.compositor.homeOrientation
+    allowedOrientations: widgetSettings.rotateLockscreen ? Orientation.All : Orientation.Portrait
     initialPage: Component {
         Page {
             id: lockScreenPage
+            ConfigurationGroup {
+                id: widgetSettings
+                path: "/desktop/lipstick-jolla-home/widgetManager"
+                property bool rotateLockscreen: true
+            }
+            
             allowedOrientations: Orientation.All
             property bool displayOnFromLowPowerMode
             readonly property bool interactionExpected: !visible || wallpaperDimmer.relativeDim || lockScreen.pinQueryPannable || Lipstick.compositor.topMenuLayer.exposed || Lipstick.compositor.welcomeScreenActive
@@ -568,13 +574,13 @@
                         LockItem {
                             id: lockItem
                             anchors.fill: parent
-                            contentTopMargin: Math.round(Screen.width/8) + statusBarHeight
+                            contentTopMargin: /*Math.round(Screen.width/8) +*/ statusBarHeight
                             statusBarHeight: statusBar.height
 
                             visible: systemStarted.value
                             allowAnimations: vignette.opened
                             iconSuffix: lockScreen.iconSuffix
-                            clock.followPeekPosition: !parent.rightItem
+                            //clock.followPeekPosition: !parent.rightItem
 
                             Binding { target: lockItem.mpris.item; property: "enabled"; value: !lockScreen.lowPowerMode }
                         }
--- original/usr/share/lipstick-jolla-home-qt5/main.qml
+++ patch/usr/share/lipstick-jolla-home-qt5/main.qml
@@ -1,4 +1,4 @@
-ï»¿/****************************************************************************
+/****************************************************************************
 **
 ** Copyright (C) 2013 Jolla Ltd.
 ** Contact: Petri M. Gerdt <petri.gerdt@jollamobile.com>
@@ -24,12 +24,16 @@
     function desktopInstance() {
         return Desktop.instance
     }
+    ConfigurationGroup {
+        id: widgetManager
+        path: "/desktop/lipstick-jolla-home/widgetManager"
+        property bool rotateHomescreen: true
 
+    }
+    
     allowedOrientations: {
-        var allowedOrientations = Screen.sizeCategory > Screen.Medium
-                ? defaultAllowedOrientations
-                : defaultAllowedOrientations & Orientation.PortraitMask
-
+        var allowedOrientations = widgetManager.rotateHomescreen ? defaultAllowedOrientations : defaultAllowedOrientations & Orientation.PortraitMask
+        
         if (Lipstick.compositor.alarmLayer.window
                     && (Lipstick.compositor.alarmLayer.window.orientation & allowedOrientations)) {
             return Lipstick.compositor.alarmLayer.window.orientation
